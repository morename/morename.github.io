<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[英语语法笔记]]></title>
      <url>http://lovebei.xyz//%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95%E7%AC%94%E8%AE%B0.html</url>
      <content type="html"><![CDATA[<p>本文是之前学习英语语法的笔记，主要参考的书有《英语语法俱乐部》,《英语阅读参考手册》，以及英语在用系列。因为最近阅读英语书籍，所以复习了一下语法，顺便整理了一下笔记并改正了笔记中的很多错误。笔记主要包括语法上的重点，一些小的细节知识和并没有。并且由于本渣英语水平有限,难免还是会有很多知识、逻辑上的错误，欢迎大家批评指正。<br><a id="more"></a></p>
<h2 id="学习英语语法的目的"><a href="#学习英语语法的目的" class="headerlink" title="学习英语语法的目的"></a>学习英语语法的目的</h2><p>学习英语语法的最主要目的是读懂并理解句子的含义，进而读懂英语书籍。所以英语语法只是用来读懂英语文章的，或者是写作、做语法题的工具。所以”记住“语法规则并不最重要的，重要的是理解语法并自然的使用。</p>
<h2 id="复合句与简单句"><a href="#复合句与简单句" class="headerlink" title="复合句与简单句"></a>复合句与简单句</h2><p>句子这样分类的原因是句子结构的不同。</p>
<h3 id="简单句"><a href="#简单句" class="headerlink" title="简单句"></a>简单句</h3><p>所谓的简单句，就是只有一套主谓结构的句子（允许有并列主语，并列谓语。）<br>其实简单句就是以下几种结构的句子：</p>
<ol>
<li>S+V</li>
<li>S+V+O</li>
<li>S+V+O+O</li>
<li>S+V+O+C</li>
<li>S+V+O+C</li>
</ol>
<h3 id="复合句"><a href="#复合句" class="headerlink" title="复合句"></a>复合句</h3><p>复合句分为: </p>
<ol>
<li>并列复合句:含有两套或更多相互并列的主谓结构的的句子。简单的说就是两个简单句的组合。可简称为合句</li>
<li>主从复合句：含有两套或更多主谓结构，但其中一个是主要的主谓结构，称为主句，其他主谓结构从属于它，并担任其句子成分，称为从句又按照担任的句子成分不同分为不同种类的从句。简称为复句。</li>
</ol>
<p>一些语法书，把主从复合句分类为主语、表语、宾语，状语从句等，并且再进行细分。其实分类不用这么详细，主从复合句实际上就是将简单句改造后放到另一个个句子中使用形成的句子，那么首先就按照文法俱乐部上所说的依照改造成的类型，分为名词、副词，形容词从句。而更详细的分类其实只是以上三种类型句子的简化或者从句位置的不同。</p>
<p><strong>并列复合句相对来说很好读懂，为了读懂一个标准的主从复合句（没有进行简化），首先要做的是识别从句的种类，下面是不同种类从句的介绍</strong></p>
<h3 id="包含名词从句的复句"><a href="#包含名词从句的复句" class="headerlink" title="包含名词从句的复句"></a>包含名词从句的复句</h3><blockquote>
<p>将一个本身独立完整的简单句改造成名词类在前面加上无意义只有语法作用的that或用疑问词引导，放到主要从句的名词位置（主语、宾语、补语、同位语等）当做名词使用所组成的句子。其中用that连接地，代表”那件事“用疑问句引导的代表”那个问题“<br>下面从几个例子看把从句放在不同位置下和不同形态下句子的变化和that的省略</p>
<h4 id="放在主语位置"><a href="#放在主语位置" class="headerlink" title="放在主语位置"></a>放在主语位置</h4></blockquote>
<ol>
<li>Something is strange</li>
<li><p>He didn’t show up on time </p>
<p>(A)That he din’t show up on time is strange<br>(B)It is strange that he didn’t show up on time</p>
</li>
</ol>
<p>He didn’t show up on time就是句1主语something的内容。可以将它改造成名词从句放入句1成为复句A。特别的名词从句如果过长，直接放到主语位置使用时，可能会让读者看不清楚，这时可以用it这个虚词来填入主语位置，让主要从句It is strange比较清晰的表示出来，名词从句则向后移成为句B。<br><strong>注意that不能省略因为没有从属连接词，读者会以为He didn’t show up就是主要从句，再看到后面的is strange就会觉得奇怪了。</strong></p>
<h4 id="放在宾语位置"><a href="#放在宾语位置" class="headerlink" title="放在宾语位置"></a>放在宾语位置</h4><ol>
<li>The defendant said something.</li>
<li><p>He didn’t do it.</p>
<p>(A) The defendant said that he didn’t do it.<br>(B) The defendant said he didn’t do it.</p>
</li>
</ol>
<p>He didn’t do it.就是例1中something的内容，于是在例2前面加上连接词that成为名词从句，然后直接放入例1中作为said的宾语，就成为(A)的复句。、<br><strong>如果名词从句放在及物动词后面的宾语位置，读者可以清楚看出这是名词从句，就可以省略连接词that成为句B。</strong><br>另一个例子：</p>
<ol>
<li>I find something strange.</li>
<li>He didn’t show up on time.</li>
</ol>
<p>→ (A) I find it strange that he didn’t show up on time.</p>
<p>He didn’t show up on time.就是例1的宾语something的内容，可以加上连接词that，成为名词从句，放入something的位置作宾语使用。可是它后面还有一个补语strange，如果宾语的从句太长，又会造成不清楚，所以还是借用虚字it暂代宾语位置，将从句后移，成为(A)的结果。</p>
<h4 id="补语位置"><a href="#补语位置" class="headerlink" title="补语位置"></a>补语位置</h4><p>The car is ruined.<br>The important thing is that we’re all right.</p>
]]></content>
      
        <categories>
            
            <category> NOTE </category>
            
        </categories>
        
        
        <tags>
            
            <tag> English </tag>
            
            <tag> grammar </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TLCL笔记（1）]]></title>
      <url>http://lovebei.xyz//TLCL%E7%AC%94%E8%AE%B0%EF%BC%881%EF%BC%89.html</url>
      <content type="html"><![CDATA[<p>这是The Linux Command Line的笔记，TLCL是学习linux命令行的入门书籍。<br><a href="https://book.douban.com/subject/6806862/" target="_blank" rel="external">豆瓣链接</a><br><a href="http://linuxcommand.org/tlcl.php" target="_blank" rel="external">在线阅读</a><br><a id="more"></a></p>
<h2 id="Part1-学习shell"><a href="#Part1-学习shell" class="headerlink" title="Part1-学习shell"></a>Part1-学习shell</h2><h3 id="1-什么是shell"><a href="#1-什么是shell" class="headerlink" title="1.什么是shell"></a>1.什么是shell</h3><p>shell就是一个程序，它接受从键盘输入的命令，然后把命令传递给操作系统去执行。几乎所有的Linux发行版都提供一个名为bash的来自GNU项目的shell程序。“bash”是“Bourne Again SHell”的首字母缩写，所指的是这样一个事实，bash是最初Unix上Steve Bourne写成shell程序sh的增强版</p>
<h4 id="1-1terminal-emulator"><a href="#1-1terminal-emulator" class="headerlink" title="1.1terminal emulator"></a>1.1terminal emulator</h4><p>当使用图形界面时我们需要另一个和shell交互的叫做terminal emulator的程序，在菜单里它可能都 被简单地称为“terminal”</p>
<h4 id="1-2-一些简单命令"><a href="#1-2-一些简单命令" class="headerlink" title="1.2 一些简单命令"></a>1.2 一些简单命令</h4><ul>
<li>date 显示系统当前时间</li>
<li>cal 默认显示当前月份的日历</li>
<li>df 查看磁盘剩余空间容量</li>
<li>free 显示空闲内存容量 <strong>mac下是top</strong></li>
</ul>
<h4 id="1-3-结束终端会话"><a href="#1-3-结束终端会话" class="headerlink" title="1.3 结束终端会话"></a>1.3 结束终端会话</h4><p>可以通过关闭终端仿真器窗口，或者是在shell提示符下输入exit命令来终止一个终端会话</p>
<h3 id="2-在如何文件系统中跳转"><a href="#2-在如何文件系统中跳转" class="headerlink" title="2.在如何文件系统中跳转"></a>2.在如何文件系统中跳转</h3><p>因为在命令行中没有图片，所以我们要考虑用不同的方法，在文件系统树中跳转。</p>
<h4 id="2-1理解文件组织系统（File-System-Organization）"><a href="#2-1理解文件组织系统（File-System-Organization）" class="headerlink" title="2.1理解文件组织系统（File System Organization）"></a>2.1理解文件组织系统（File System Organization）</h4><p>像传统的操作系统一样，Linux系统上的文件被安排在所谓的分层目录结构中。这意味着它们被组织成类似树状的目录（在其他系统中称为文件夹），这个目录树可能包含文件和其他目录。文件系统中的第一个目录称为根目录。根目录包含文件和子目录，子目录包含更多文件和子目录，依次类推。</p>
<p>注意(类Unix系统)不像Windows，每个存储设备都有一个独自的文件系统。类 Unix 操作系统，比如Linux，总是只有一个单一的文件系统树，不管有多少个磁盘或者存储设备连接到计算机上。根据负责维护系统安全的系统管理员的兴致，存储设备连接到（或着更精确些，是挂载到）目录树的各个节点上。</p>
<h4 id="2-2-找到当前工作目录"><a href="#2-2-找到当前工作目录" class="headerlink" title="2.2 找到当前工作目录"></a>2.2 找到当前工作目录</h4><blockquote>
<p>把文件系统想象成一个树形迷宫形状，我们站在迷宫的中间位置。在任意时刻，我们都处于一个目录里面，能看到这个目录包含的所有文件，以及通往上面目录（父目录）的路径，和下面的各个子目录。我们所在的目录则称为当前工作目录。</p>
</blockquote>
<p>如何找到当前目录呢，可以通过在命令行输入pwd（print working directory）命令，来显示当前工作目录。</p>
<p><strong>注意：当我们首次登录系统（或者启动 terminal emulator session）后，当前工作目录是我们的home目录。每个用户都有他自己的home目录，当用户以普通用户的身份操控系统时，家目录是唯一允许用户对文件进行写入的地方。</strong></p>
<h4 id="2-3-列出目录内容"><a href="#2-3-列出目录内容" class="headerlink" title="2.3 列出目录内容"></a>2.3 列出目录内容</h4><p>列出一个目录包含的文件及子目录，使用ls（List directory contents）命令。</p>
<p>未写完</p>
]]></content>
      
        <categories>
            
            <category> NOTE </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Command Line </tag>
            
            <tag> shell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Markdown 的基本语法]]></title>
      <url>http://lovebei.xyz//Markdown%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95.html</url>
      <content type="html"><![CDATA[<p>介绍一些Markdown的基本语法。<br><a id="more"></a></p>
<h2 id="标题设置"><a href="#标题设置" class="headerlink" title="标题设置"></a>标题设置</h2><p>Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。<br>第一种：通过在文字下方添加“=”和“-”，他们分别表示一级标题和二级标题。<br>第二种：在文字开头加上 “#”，通过“#”数量表示几级标题。（一共只有1~6级标题，1级标题字体最大）</p>
<h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><p>Markdown 使用星号<code>（*）</code>和底线<code>（_）</code>作为标记强调字词的符号，被 <code>*</code> 或 <code>_</code>包围的字词会被转成用 <code>&lt;em&gt;</code> 标签包围，用两个 <code>*</code>或<code>_</code>包起来的话，则会被转成<code>&lt;strong&gt;</code></p>
<h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><p>将需要设置为斜体的文字两端使用1个“*”或者“_”包起来</p>
<h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h3><p>将需要设置为粗体的文字两端使用2个“*”或者“_”包起来</p>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><blockquote>
<p>Markdown 支持有序列表和无序列表,无序列表使用星号、加号或是减号作为列表标记</p>
</blockquote>
<p>在文字开头添加<code>*</code>或<code>+</code>或<code>-</code>实现无序列表。但是要注意在符号和文字之间需要添加空格。<br>使用数字后面跟上句号。和空格实现有序列表</p>
<h2 id="blockquote"><a href="#blockquote" class="headerlink" title="blockquote"></a>blockquote</h2><p>在文字开头添加“&gt;”表示blockquote</p>
<p><strong>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt;,引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等</strong></p>
<h2 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h2><blockquote>
<p>和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块,通常这些区块我们并不希望它以一般段落文件的方式去排版,而是照原来的样子。</p>
</blockquote>
<p>要在Markdown中建立代码区块很简单,只要简单地缩进4个空格或是1个制表符就可以显示<br>还有一种方法适合简单文字,使用<code>&lt;blockquote&gt;</code></p>
<h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。可以在星号或是减号中间插入空格</p>
<h2 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h2><p>Markdown支持两种形式的链接语法：行内式和参考式两种形式。</p>
<p>不管是哪一种，链接文字都是用[方括号]来标记。</p>
<h3 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h3><p>要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可<br>例如：    </p>
<pre><code>This is [an example](http://example.com/ &quot;Title&quot;)

[This link](http://example.net/) has no title attribute.
</code></pre><p>效果如下：<br>This is <a href="http://example.com/" title="Title" target="_blank" rel="external">an example</a>.</p>
<p><a href="http://example.net/" target="_blank" rel="external">This link</a> has no title attribute.</p>
<h3 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h3><p>参考式的效果如下：</p>
<p>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="external">Google</a> than from<br><a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="external">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="external">MSN</a>.</p>
<p>  实现方法: </p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">I get 10 times more traffic from [<span class="string">Google</span>][<span class="symbol">1</span>] than from [<span class="string">Yahoo</span>][<span class="symbol">2</span>] or [<span class="string">MSN</span>][<span class="symbol">3</span>].  [1]: http://google.com/        "Google" [2]: http://search.yahoo.com/  "Yahoo Search" [3]: http://search.msn.com/    "MSN Search"</div></pre></td></tr></table></figure>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>和links的处理方式很类似<br><figure class="highlight plain"><figcaption><span>text](/path/to/img.jpg "Title")```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">或者</div><div class="line">```![alt text][id] [id]: /path/to/img.jpg &quot;Title&quot;</div></pre></td></tr></table></figure></p>
<h2 id="footnote"><a href="#footnote" class="headerlink" title="footnote"></a>footnote</h2><p>实现方式如下：<br><code>``hello[^hello][^hello]: hi</code></p>
]]></content>
      
        
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
